# docker-compose.yml for self-hosting Sentient
# This file should be placed in the `src` directory.

services:
    # Client (Next.js Frontend)
    client:
        container_name: sentient-client-selfhost
        build:
            context: ./client
            dockerfile: Dockerfile
            args:
                # Pass env vars from the root .env file at build time
                - NEXT_PUBLIC_APP_SERVER_URL=${NEXT_PUBLIC_APP_SERVER_URL}
                - INTERNAL_APP_SERVER_URL=${INTERNAL_APP_SERVER_URL}
                - INTERNAL_CLIENT_URL=${INTERNAL_CLIENT_URL}
                - APP_BASE_URL=${APP_BASE_URL}
                - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT}
                - SELF_HOST_AUTH_TOKEN=${SELF_HOST_AUTH_TOKEN}
                # Pass Auth0 vars as empty strings for the build to succeed
                - AUTH0_SECRET=""
                - AUTH0_BASE_URL=""
                - AUTH0_ISSUER_BASE_URL=""
                - AUTH0_CLIENT_ID=""
                - AUTH0_CLIENT_SECRET=""
                - AUTH0_AUDIENCE=""
                - AUTH0_SCOPE=""
        ports:
            - "3000:3000"
        env_file:
            - ./client/.env.selfhost # Load runtime env vars
        depends_on:
            - server
        networks:
            - sentient_network

    # Server (FastAPI Backend + MCPs + Celery Workers)
    server:
        container_name: sentient-server-selfhost
        build:
            context: ./server
            dockerfile: Dockerfile
            args:
                # Pass env vars from the root .env file at build time
                - OPENAI_API_KEY=${OPENAI_API_KEY}
                - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
        ports:
            - "5000:80" # Expose Nginx proxy
        env_file:
            - ./server/.env.selfhost # Load runtime env vars
        depends_on:
            - mongodb
            - redis
        networks:
            - sentient_network
        # Add DNS servers to ensure the container can resolve external domains like api.novita.ai
        dns:
            - 8.8.8.8
            - 1.1.1.1

    # MongoDB Database
    mongodb:
        image: mongo:latest
        container_name: sentient-db-selfhost
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
        volumes:
            - mongodb_data:/data/db
        networks:
            - sentient_network

    # Redis for Celery Broker
    redis:
        image: redis:7-alpine
        container_name: sentient-redis-selfhost
        command: redis-server --requirepass "${REDIS_PASSWORD}"
        volumes:
            - redis_data:/data
        networks:
            - sentient_network

networks:
    sentient_network:
        driver: bridge

volumes:
    mongodb_data:
    redis_data:
